package bin

import (
	"bytes"
	"compress/gzip"
	"io"
)

// util_tmpl returns raw, uncompressed file data.
func util_tmpl() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x6c, 0x90,
		0xc1, 0x4e, 0xc3, 0x30, 0x0c, 0x86, 0xef, 0x7d, 0x8a, 0x5f, 0x3d, 0x31,
		0x89, 0xf1, 0x06, 0xbb, 0xf2, 0x12, 0x08, 0x4d, 0xde, 0xea, 0xb4, 0x56,
		0x83, 0x33, 0xc5, 0xce, 0xa4, 0x51, 0x8d, 0x67, 0xa7, 0x09, 0x2b, 0x07,
		0xc4, 0xc9, 0x89, 0xfd, 0xff, 0xbf, 0x3f, 0x79, 0x59, 0x06, 0x0e, 0xa2,
		0x8c, 0xbe, 0xb8, 0xc4, 0xfe, 0x7e, 0xef, 0xf6, 0x7b, 0xbc, 0x8a, 0x52,
		0x94, 0x4f, 0x36, 0x10, 0x06, 0x72, 0x82, 0x79, 0x2e, 0x67, 0x2f, 0x99,
		0x61, 0x09, 0x3e, 0x91, 0x43, 0x1c, 0x67, 0x52, 0x9c, 0x18, 0xc5, 0x78,
		0x80, 0x27, 0x18, 0xd7, 0x3a, 0x31, 0x68, 0x1c, 0x33, 0x8f, 0xe4, 0x92,
		0xf4, 0xa5, 0x0b, 0x45, 0xcf, 0xf5, 0x05, 0x9b, 0x6f, 0xc7, 0xf0, 0xc8,
		0x7d, 0xba, 0x52, 0x2c, 0xbc, 0xeb, 0x00, 0x09, 0xf0, 0xdb, 0x65, 0x6b,
		0xe0, 0xeb, 0x80, 0xde, 0xe9, 0x14, 0xb9, 0xaf, 0x49, 0x8a, 0xcc, 0xeb,
		0x52, 0x85, 0x4a, 0x04, 0xeb, 0xd0, 0xfd, 0x18, 0x6a, 0x92, 0xd8, 0x71,
		0x12, 0xf3, 0x34, 0x66, 0xfa, 0xd8, 0xcc, 0xd5, 0xb1, 0x2a, 0xd0, 0x04,
		0xbf, 0xd3, 0x7f, 0x96, 0x72, 0x34, 0x6e, 0xc2, 0x90, 0x32, 0xe6, 0xe7,
		0x2b, 0x44, 0x71, 0x21, 0xc9, 0xb6, 0x25, 0x0d, 0xa9, 0x8d, 0x81, 0xf6,
		0x7f, 0x9b, 0xdf, 0x71, 0xf8, 0xc3, 0xbf, 0x6b, 0x82, 0xca, 0x84, 0x8d,
		0xec, 0xc1, 0xda, 0x2c, 0x5d, 0xeb, 0x2d, 0xcb, 0x5a, 0xd6, 0x8b, 0x7e,
		0x07, 0x00, 0x00, 0xff, 0xff, 0xe7, 0xf0, 0xc6, 0x4a, 0x64, 0x01, 0x00,
		0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}

func init() {
	go_bindata["/util.tmpl"] = util_tmpl
}
