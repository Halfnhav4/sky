package codegen

import (
	"bytes"
	"compress/gzip"
	"io"
)

// event_tmpl returns raw, uncompressed file data.
func event_tmpl() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x8c, 0x90,
		0x41, 0x6b, 0xc3, 0x30, 0x0c, 0x85, 0xef, 0xfe, 0x15, 0xa2, 0x97, 0xa6,
		0x50, 0x72, 0xd8, 0xc6, 0x2e, 0x65, 0x7f, 0x63, 0x97, 0x52, 0x8c, 0x9b,
		0xc8, 0xc3, 0x2c, 0x51, 0x8a, 0x2d, 0x97, 0x15, 0x93, 0xff, 0x3e, 0x59,
		0x34, 0x5b, 0x76, 0x18, 0xdb, 0x4d, 0xef, 0xf9, 0x13, 0x7e, 0x7a, 0xa5,
		0xf4, 0xe8, 0x03, 0x21, 0x6c, 0xf0, 0x8a, 0xc4, 0x9b, 0x79, 0x36, 0xde,
		0x87, 0xb6, 0x13, 0xb7, 0x39, 0x1e, 0x8d, 0xe1, 0xdb, 0x05, 0x65, 0x86,
		0xc4, 0x31, 0x77, 0x0c, 0xc5, 0x00, 0x9c, 0xa7, 0x69, 0x00, 0x8b, 0x53,
		0x3a, 0xac, 0x84, 0xaf, 0x22, 0x07, 0xe2, 0xc7, 0x07, 0xcb, 0x60, 0x39,
		0x8c, 0x98, 0xd8, 0x8d, 0x97, 0x6a, 0x8b, 0xfb, 0xfc, 0xa4, 0xae, 0xae,
		0x94, 0x12, 0x1d, 0xbd, 0x21, 0xb4, 0xaf, 0x2e, 0x06, 0x77, 0x1e, 0x30,
		0xc9, 0xa7, 0xd5, 0xbe, 0xba, 0xd8, 0x63, 0x37, 0x40, 0x7b, 0xd7, 0x48,
		0xbd, 0x4c, 0x33, 0xa4, 0xf7, 0x9b, 0xd5, 0x74, 0x96, 0x0f, 0xc6, 0x9c,
		0x4e, 0x3b, 0xa3, 0x19, 0x47, 0x64, 0x57, 0xe3, 0x35, 0xdb, 0x15, 0xb0,
		0xdd, 0x6b, 0x46, 0x6b, 0x03, 0xf5, 0xf8, 0x01, 0x2f, 0xaa, 0x24, 0xab,
		0x4c, 0x3e, 0x53, 0xc7, 0x61, 0xa2, 0x46, 0xd1, 0x1d, 0x44, 0xe4, 0x1c,
		0x09, 0x54, 0xb5, 0xf5, 0x1e, 0x90, 0x0f, 0xf7, 0x8a, 0xfb, 0x7f, 0xe0,
		0x7e, 0xc1, 0xbf, 0x6e, 0xfd, 0x73, 0xe9, 0x9b, 0xbc, 0xaf, 0xfe, 0x52,
		0x45, 0x7d, 0x58, 0xae, 0xab, 0xe5, 0xff, 0x2c, 0x04, 0x40, 0x4a, 0x91,
		0x0e, 0x16, 0xfd, 0x19, 0x00, 0x00, 0xff, 0xff, 0x15, 0x8f, 0x1a, 0x27,
		0xc3, 0x01, 0x00, 0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}
