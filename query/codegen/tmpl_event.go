package codegen

import (
	"bytes"
	"compress/gzip"
	"io"
)

// event_tmpl returns raw, uncompressed file data.
func event_tmpl() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x8c, 0x90,
		0xc1, 0x6a, 0x03, 0x31, 0x0c, 0x44, 0xef, 0xfe, 0x0a, 0x91, 0x4b, 0x36,
		0x10, 0xf6, 0xd0, 0x96, 0x5e, 0x42, 0x7f, 0xa3, 0x97, 0x10, 0x8c, 0xb3,
		0x2b, 0x17, 0xd3, 0x5d, 0x39, 0xd8, 0x72, 0x68, 0x30, 0xfb, 0xef, 0x95,
		0x45, 0xd2, 0xe6, 0xd0, 0xd2, 0xde, 0x34, 0xe3, 0x27, 0x3c, 0x9a, 0x5a,
		0x47, 0xf4, 0x81, 0x10, 0x56, 0x78, 0x46, 0xe2, 0xd5, 0xb2, 0x18, 0xef,
		0x43, 0x3f, 0x88, 0xdb, 0xed, 0xf7, 0xc6, 0xf0, 0xe5, 0x84, 0x32, 0x43,
		0xe6, 0x54, 0x06, 0x86, 0x6a, 0x00, 0x8e, 0x31, 0x4e, 0x60, 0x31, 0xe6,
		0xdd, 0x9d, 0xf0, 0x4d, 0x94, 0x40, 0xfc, 0xf8, 0x60, 0x19, 0x2c, 0x87,
		0x19, 0x33, 0xbb, 0xf9, 0xd4, 0x6c, 0x71, 0x9f, 0x9f, 0xd4, 0xd5, 0x95,
		0x5a, 0x93, 0xa3, 0x37, 0x84, 0xfe, 0xd5, 0xa5, 0xe0, 0x8e, 0x13, 0x66,
		0xf9, 0xb4, 0xd9, 0x67, 0x97, 0x46, 0x1c, 0x26, 0xe8, 0xaf, 0x1a, 0x69,
		0x94, 0x69, 0x81, 0xfc, 0x7e, 0xb1, 0x9a, 0xce, 0xf2, 0xce, 0x98, 0xc3,
		0x61, 0x63, 0x34, 0xe3, 0x8c, 0xec, 0x5a, 0xbc, 0x6e, 0x7d, 0x07, 0xac,
		0xb7, 0x9a, 0xd1, 0xda, 0x40, 0x23, 0x7e, 0xc0, 0x8b, 0x2a, 0xc9, 0x2a,
		0x93, 0x2f, 0x34, 0x70, 0x88, 0xd4, 0x29, 0xba, 0x81, 0x84, 0x5c, 0x12,
		0x81, 0xaa, 0xbe, 0xdd, 0x03, 0xf2, 0xe1, 0x56, 0x71, 0xff, 0x0f, 0xdc,
		0xdf, 0xf0, 0xaf, 0x5b, 0xff, 0x5c, 0xfa, 0x26, 0xaf, 0xab, 0xbf, 0x54,
		0xd1, 0x1e, 0xda, 0x75, 0x3f, 0xb4, 0x01, 0x20, 0x8d, 0x48, 0x01, 0x37,
		0xfd, 0x19, 0x00, 0x00, 0xff, 0xff, 0x87, 0x01, 0x2a, 0x01, 0xc0, 0x01,
		0x00, 0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}
